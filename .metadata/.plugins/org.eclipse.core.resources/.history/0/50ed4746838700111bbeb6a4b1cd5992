import java.awt.geom.Point2D;

import org.junit.*;
import static org.junit.Assert.*;


public class EnemyTest {

	private static Enemy FireEnemy, WaterEnemy, LightEnemy, EarthEnemy, AirEnemy;
	
	@Before
	public void setUp(){
		Enemy.setDefaultSpawnLocation(new Point2D.Double(0,0));
		FireEnemy = Enemy.createEnemy(Frame.FIRE);
		WaterEnemy = Enemy.createEnemy(Frame.WATER);
		LightEnemy = Enemy.createEnemy(Frame.LIGHT);
		EarthEnemy = Enemy.createEnemy(Frame.EARTH);
		AirEnemy = Enemy.createEnemy(Frame.AIR);
	}
	
	@After
	public void tearDown(){
		FireEnemy = null;
		WaterEnemy = null;
		LightEnemy = null;
		EarthEnemy = null;
		AirEnemy = null;
	}
	
	@Test
	public void testCanGetElement(){
		assertEquals(Frame.FIRE, FireEnemy.getElement());
		assertEquals(Frame.WATER, WaterEnemy.getElement());
		assertEquals(Frame.LIGHT, LightEnemy.getElement());
		assertEquals(Frame.EARTH, EarthEnemy.getElement());
		assertEquals(Frame.AIR, AirEnemy.getElement());
	}
	
	@Test
	public void testCorrectSpawnPlacement(){
		assertEquals(new Point2D.Double(0,0), FireEnemy.getLocation());
		assertEquals(new Point2D.Double(0,0), WaterEnemy.getLocation());
		assertEquals(new Point2D.Double(0,0), LightEnemy.getLocation());
		assertEquals(new Point2D.Double(0,0), EarthEnemy.getLocation());
		assertEquals(new Point2D.Double(0,0), AirEnemy.getLocation());
	}
	
	@Test
	public void testIDIsIncremented(){
		int id = FireEnemy.getID();
		assertEquals(id, FireEnemy.getID());
		assertEquals(id+1, WaterEnemy.getID());
		assertEquals(id+2, LightEnemy.getID());
		assertEquals(id+3, EarthEnemy.getID());
		assertEquals(id+4, AirEnemy.getID());
	}
	
	@Test
	public void testNameisCorrect(){
		assertEquals("FIRE ENEMY", FireEnemy.getName());
		assertEquals("WATER ENEMY", WaterEnemy.getName());
		assertEquals("LIGHT ENEMY", LightEnemy.getName());
		assertEquals("EARTH ENEMY", EarthEnemy.getName());
		assertEquals("AIR ENEMY", AirEnemy.getName());
	}
	
	@Test
	public void testSpeedIsCorrect(){
		assertEquals(1, FireEnemy.getSpeed());
		assertEquals(1, WaterEnemy.getSpeed());
		assertEquals(1, LightEnemy.getSpeed());
		assertEquals(1, EarthEnemy.getSpeed());
		assertEquals(1, AirEnemy.getSpeed());
	}
	
	@Test
	public void testArmorIsCorrect(){
		assertEquals(0, FireEnemy.getArmor());
		assertEquals(0, WaterEnemy.getArmor());
		assertEquals(0, LightEnemy.getArmor());
		assertEquals(0, EarthEnemy.getArmor());
		assertEquals(0, AirEnemy.getArmor());
	}
	
	@Test
	public void testHPIsCorrect(){
		assertEquals(100, FireEnemy.getHP());
		assertEquals(100, WaterEnemy.getHP());
		assertEquals(100, LightEnemy.getHP());
		assertEquals(100, EarthEnemy.getHP());
		assertEquals(100, AirEnemy.getHP());
	}
	
	@Test
	public void testDamageIsCorrect(){
		assertEquals(100, FireEnemy.getHP());
		assertEquals(100, WaterEnemy.getHP());
		assertEquals(100, LightEnemy.getHP());
		assertEquals(100, EarthEnemy.getHP());
		assertEquals(100, AirEnemy.getHP());
		
		FireEnemy.damage(1);
		WaterEnemy.damage(1);
		LightEnemy.damage(1);
		EarthEnemy.damage(1);
		AirEnemy.damage(1);
		
		assertEquals(99, FireEnemy.getHP());
		assertEquals(99, WaterEnemy.getHP());
		assertEquals(99, LightEnemy.getHP());
		assertEquals(99, EarthEnemy.getHP());
		assertEquals(99, AirEnemy.getHP());
	}
}
